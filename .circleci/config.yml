version: 2.1

orbs:
  node: circleci/node@5.0.2
  serverless-framework: circleci/serverless-framework@2.0
  python: circleci/python@2.0.3

commands:
  check_env_var:
    description: checking environment variables
    steps:
      - run: |
          echo checking environment variables
          echo MY_ENV is $MY_ENV
          echo MY_REGION is $MY_REGION
          echo BRANCH_NAME is $BRANCH_NAME
  setup_serverless:
    description: setup serverless
    steps:
      - node/install:
          node-version: "16.13"
      - run: node --version
      - run: npm ci
      - run:
          name: install serverless framework
          command: npm install -g serverless
  install_plugin:
    description: install serverless plugin
    steps:
      - run:
          name: install python-requirements plugins
          command: "sls plugin install --name serverless-python-requirements"
      - run:
          name: install stream arn plugin
          command: "sls plugin install --name serverless-dynamodb-stream-arn-plugin"
  authenticate_serverless:
    description: authenticate serverles
    steps:
      - run:
          name: authenticate serverless
          command: "sls config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY"
  build_pkg:
    description: build serverless package
    steps:
      - run:
          name: build lambda package
          command: "sls package --package lambda_pkg --verbose"
  deploy_pkg:
    description: deploy lambda package
    steps:
      - run: "sls deploy --package ./lambda_pkg --verbose"
  test_pkg:
    description: test lambda package locally
    steps:
      - run: pip3 install -r ./requirements/requirements-<< parameters.branch_name >>.txt
      - run: |
          statusCode=$(sls invoke local -f welcomer -p test_data.json 2>/dev/null | tail -3 | python3 -c 'import sys,json; print(json.load(sys.stdin)["statusCode"])')
          if [[ $statusCode != 200 ]]; then 
            echo lambda build failed with statuscode $statusCode
            exit 1 
          else 
            echo lambda build successful with statuscode $statusCode
            exit 0 
          fi
    parameters:
      branch_name:
        type: string

executors:
  base-image:
    machine:
      image: ubuntu-2004:current
    resource_class: medium

jobs:
  develop:
    executor: base-image
    environment:
      MY_ENV: test
      MY_REGION: ap-south-1
      BRANCH_NAME: &branch_name develop
    steps:
      - checkout
      - serverless-framework/setup
      - check_env_var
      - install_plugin
      - authenticate_serverless
      - test_pkg:
          branch_name: *branch_name
      - build_pkg
      - deploy_pkg
  master:
    executor: base-image
    environment:
      MY_ENV: prod
      MY_REGION: us-west-2
      BRANCH_NAME: &branch_name master
    steps:
      - checkout
      - serverless-framework/setup
      - check_env_var
      - install_plugin
      - authenticate_serverless
      - test_pkg:
          branch_name: *branch_name
      - build_pkg
      - deploy_pkg
  feature:
    executor: base-image
    environment:
      MY_ENV: test
      MY_REGION: ap-south-1
      BRANCH_NAME: &branch_name develop
    steps:
      - checkout
      - serverless-framework/setup
      - check_env_var
      - install_plugin
      - authenticate_serverless
      - build_pkg
      - test_pkg:
          branch_name: *branch_name

workflows:
  serverless:
    jobs:
      - develop:
          context: aws
          filters:
            branches:
              only: develop
      - master:
          context: aws
          filters:
            branches:
              only: master
      - feature:
          context: aws
          filters:
            branches:
              ignore:
                - develop
                - master
